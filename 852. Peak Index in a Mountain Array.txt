852. Peak Index in a Mountain Array
Solved
Medium
Topics
premium lock icon
Companies
You are given an integer mountain array arr of length n where the values increase to a peak element and then decrease.

Return the index of the peak element.

Your task is to solve it in O(log(n)) time complexity.

 

Example 1:

Input: arr = [0,1,0]

Output: 1

Example 2:

Input: arr = [0,2,1,0]

Output: 1

Example 3:

Input: arr = [0,10,5,2]

Output: 1

 

Constraints:

3 <= arr.length <= 105
0 <= arr[i] <= 106
arr is guaranteed to be a mountain array.

Code:

class Solution {
    public int peakIndexInMountainArray(int[] arr) {
        int s=0,e=arr.length-1;
        while(s<=e){
            int m=(e+s)/2;
            if(m>0 && arr[m]>arr[m-1] && m<arr.length-1 && arr[m]>arr[m+1]){
                return m;
            }
            if(m<arr.length-1 && arr[m]<arr[m+1]){
                s=m+1;
            }
            if(m>0 && arr[m]<arr[m-1]){
                e=m-1;
            }
        }
        return -1;
    }
}
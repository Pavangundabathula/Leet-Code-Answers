3. Longest Substring Without Repeating Characters
Solved
Medium
Topics
Companies
Hint
Given a string s, find the length of the longest substring without duplicate characters.

 

Example 1:

Input: s = "abcabcbb"
Output: 3
Explanation: The answer is "abc", with the length of 3.
Example 2:

Input: s = "bbbbb"
Output: 1
Explanation: The answer is "b", with the length of 1.
Example 3:

Input: s = "pwwkew"
Output: 3
Explanation: The answer is "wke", with the length of 3.
Notice that the answer must be a substring, "pwke" is a subsequence and not a substring.
 

Constraints:

0 <= s.length <= 5 * 104
s consists of English letters, digits, symbols and spaces.

Code:

class Solution {
    public int lengthOfLongestSubstring(String s) {

        int start=0;
        int end=0;
        HashSet<Character> set=new HashSet<>();
        int maxlen=0;
        int len=0;
        while(start<=end && end<s.length()){
            char ch=s.charAt(end);
            while(set.contains(ch)){
                char ch2=s.charAt(start);
                set.remove(ch2);
                len--;
                start++;
            }
            set.add(ch);
            len++;
            end++;
            maxlen=Math.max(len,maxlen);
        }
        return maxlen;
    }
}
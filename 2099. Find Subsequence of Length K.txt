2099. Find Subsequence of Length K With the Largest Sum
Solved
Easy
Topics
premium lock icon
Companies
Hint
You are given an integer array nums and an integer k. You want to find a subsequence of nums of length k that has the largest sum.

Return any such subsequence as an integer array of length k.

A subsequence is an array that can be derived from another array by deleting some or no elements without changing the order of the remaining elements.

 

Example 1:

Input: nums = [2,1,3,3], k = 2
Output: [3,3]
Explanation:
The subsequence has the largest sum of 3 + 3 = 6.
Example 2:

Input: nums = [-1,-2,3,4], k = 3
Output: [-1,3,4]
Explanation: 
The subsequence has the largest sum of -1 + 3 + 4 = 6.
Example 3:

Input: nums = [3,4,3,3], k = 2
Output: [3,4]
Explanation:
The subsequence has the largest sum of 3 + 4 = 7. 
Another possible subsequence is [4, 3].
 

Constraints:

1 <= nums.length <= 1000
-105 <= nums[i] <= 105
1 <= k <= nums.length

code:

class Solution {
    public int[] maxSubsequence(int[] nums, int k) {
        int n = nums.length;
        if (k == n)
            return nums;
        
        int[] temp = Arrays.copyOf(nums, nums.length);
        Arrays.sort(temp);
        int num=temp[n-k];
        int count=0;
        for(int i=n-k;i<n;i++){
            if(temp[i]==num){
                count++;
            }
        }
        int[] result=new int[k];
        int index=0;
        for(int i:nums){
            if(i>num){
                result[index]=i;
                index++;
            }else if(i==num && count>0){
                result[index]=i;
                index++;
                count--;
            }
            if(index==k){
                break;
            }
        }
        return result;
    }
}
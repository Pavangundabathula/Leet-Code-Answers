109. Convert Sorted List to Binary Search Tree
Solved
Medium
Topics
premium lock icon
Companies
Given the head of a singly linked list where elements are sorted in ascending order, convert it to a height-balanced binary search tree.

 

Example 1:


Input: head = [-10,-3,0,5,9]
Output: [0,-3,9,-10,null,5]
Explanation: One possible answer is [0,-3,9,-10,null,5], which represents the shown height balanced BST.
Example 2:

Input: head = []
Output: []
 

Constraints:

The number of nodes in head is in the range [0, 2 * 104].
-105 <= Node.val <= 105


Code:

class Solution {
    public TreeNode sortedListToBST(ListNode head) {
        if(head==null){
            return null;
        }
        if(head.next==null){
            return new TreeNode(head.val);
        }
        ListNode s=head;
        ListNode f=head;
        ListNode prev=null;
        while(f!=null && f.next!=null){
            prev=s;
            s=s.next;
            f=f.next.next;
        }
        TreeNode node=new TreeNode(s.val);
        prev.next=null;
        node.left=sortedListToBST(head);
        node.right=sortedListToBST(s.next);
        return node;
    }
}
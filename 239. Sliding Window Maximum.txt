239. Sliding Window Maximum
Solved
Hard
Topics
premium lock icon
Companies
Hint
You are given an array of integers nums, there is a sliding window of size k which is moving from the very left of the array to the very right. You can only see the k numbers in the window. Each time the sliding window moves right by one position.

Return the max sliding window.

 

Example 1:

Input: nums = [1,3,-1,-3,5,3,6,7], k = 3
Output: [3,3,5,5,6,7]
Explanation: 
Window position                Max
---------------               -----
[1  3  -1] -3  5  3  6  7       3
 1 [3  -1  -3] 5  3  6  7       3
 1  3 [-1  -3  5] 3  6  7       5
 1  3  -1 [-3  5  3] 6  7       5
 1  3  -1  -3 [5  3  6] 7       6
 1  3  -1  -3  5 [3  6  7]      7
Example 2:

Input: nums = [1], k = 1
Output: [1]
 

Constraints:

1 <= nums.length <= 105
-104 <= nums[i] <= 104
1 <= k <= nums.length

Code:

class Solution {
    public int[] maxSlidingWindow(int[] A, int B) {
        Deque<Integer> dq=new LinkedList<>();
        int[] arr=new int[A.length-B+1];
        int ind=0;
        int i=0,j=0;
        
        while(j<A.length){
            int num=A[j];

            while(!dq.isEmpty() && dq.getLast()<num){
                dq.pollLast();
            }
            dq.addLast(num);

            if(j-i+1<B){
                j++;
            }else{
                arr[ind]=dq.getFirst();
                if(A[i] == dq.getFirst()){
                    dq.pollFirst();
                }
                ind++;
                i++;
                j++;
            }
        }
        return arr;
    }
}